@using GoldEx.Shared.Services.Abstractions
<MudAppBar Elevation="1" Dense="true">
    <MudIconButton Icon="@Icons.Material.Filled.Menu" Color="Color.Inherit" Edge="Edge.Start" OnClick="@DrawerToggle" />
    <MudImage Src="/assets/logo/logo512.png" Alt="گلدکس" Height="32" Class="ml-3 mr-2" /> <MudText Typo="Typo.h5">گلدکس</MudText>
    <MudSpacer />
    <MudIconButton Icon="@(DarkLightModeButtonIcon)" Color="Color.Inherit" OnClick="@DarkModeToggle" />

    <Profile />
</MudAppBar>

@code
{
    [Parameter] public EventCallback<bool> DrawerOpenChanged { get; set; }

    [Parameter] public bool DrawerOpen { get; set; }

    [Inject] private IThemeService? ThemeService { get; set; }

    private string DarkLightModeButtonIcon =>
        ThemeService?.IsDarkMode == true
            ? Icons.Material.Filled.DarkMode
            : Icons.Material.Filled.LightMode;

    private void DrawerToggle()
    {
        DrawerOpen = !DrawerOpen;
        DrawerOpenChanged.InvokeAsync(DrawerOpen);
    }

    private void DarkModeToggle(MouseEventArgs args)
    {
        ThemeService?.ToggleMode();
    }

    [Inject] private NavigationManager NavigationManager { get; set; } = default!;  // Inject NavigationManager
}