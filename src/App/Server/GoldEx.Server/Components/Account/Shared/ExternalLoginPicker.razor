@using GoldEx.Sdk.Server.Domain.Entities.Identity
@using Microsoft.AspNetCore.Authentication
@using Microsoft.AspNetCore.Identity
@using GoldEx.Server.Services

@inject SignInManager<AppUser> SignInManager
@inject IdentityRedirectManager RedirectManager

@if (_externalLogins.Length == 0)
{
    <MudAlert Variant="Variant.Text" Severity="Severity.Warning" Dense="true" ContentAlignment="HorizontalAlignment.Start">هیچ سرویس خارجی برای ورود به سیستم تنظیم نشده است</MudAlert>
    <MudText Typo="Typo.body1" Class="pt-4">
        لطفا با مدیر سیستم ارتباط بگیرید
    </MudText>
}
else
{
    <form class="form-horizontal" action="Account/PerformExternalLogin" method="post">
        <div>
            <AntiforgeryToken />
            <input type="hidden" name="ReturnUrl" value="@ReturnUrl" />
            <p>
                @foreach (var provider in _externalLogins)
                {
                    <button type="submit" class="btn btn-primary" name="provider" value="@provider.Name" title="ورود با استفاده از حساب @provider.DisplayName">@provider.DisplayName</button>
                }
            </p>
        </div>
    </form>
}

@code {
    private AuthenticationScheme[] _externalLogins = [];

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        _externalLogins = (await SignInManager.GetExternalAuthenticationSchemesAsync()).ToArray();
    }
}
