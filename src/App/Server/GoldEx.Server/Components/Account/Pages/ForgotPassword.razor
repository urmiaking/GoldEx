@attribute [Route(ClientRoutes.Accounts.ForgotPassword)]

@inject UserManager<AppUser> UserManager
@inject IEmailSender<AppUser> EmailSender
@inject NavigationManager NavigationManager
@inject IdentityRedirectManager RedirectManager
@layout EmptyBoxLayout

<PageTitle>فراموشی رمز عبور</PageTitle>

<MudStack AlignItems="AlignItems.Center">
    <MudItem>
        <MudImage Src="/assets/logo/logo512.png" Alt="Logo" Height="50" />
    </MudItem>
    <MudItem>
        <MudText Align="Align.Center" Typo="Typo.h3" GutterBottom="true">گلدکس</MudText>
    </MudItem>
    <MudItem>
        <MudText Align="Align.Center" Typo="Typo.h5" GutterBottom="true">فراموشی رمز عبور</MudText>
    </MudItem>
    <MudItem>
        <MudText Typo="Typo.body1">رمز عبور خود را فراموش كرده ايد؟ لطفا ايميل خود را در کادر زیر وارد کنید تا لینک بازنشانی رمز عبور برای شما ارسال شود</MudText>
    </MudItem>
</MudStack>

<EditForm Model="Input" FormName="forgot-password" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator />

    <MudGrid Class="mt-2 mb-2">
        <MudItem xs="12">
            <MudStaticTextField @bind-Value="Input.Email" For="@(() => Input.Email)"
                                Label="ایمیل" Placeholder="name@example.com" Variant="Variant.Outlined"
                                UserAttributes="@(new Dictionary<string, object?> { { "autocomplete", "username" }, { "aria-required", "true" } } )" />
        </MudItem>
        <MudItem xs="12">
            <MudStaticButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" FormAction="FormAction.Submit">ارسال</MudStaticButton>
        </MudItem>
    </MudGrid>
</EditForm>

@code {
    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    private async Task OnValidSubmitAsync()
    {
        var user = await UserManager.FindByEmailAsync(Input.Email);
        if (user is null || !await UserManager.IsEmailConfirmedAsync(user))
        {
            // Don't reveal that the user does not exist or is not confirmed
            RedirectManager.RedirectTo(ClientRoutes.Accounts.ForgotPasswordConfirmation);
        }

        var code = await UserManager.GeneratePasswordResetTokenAsync(user);
        code = WebEncoders.Base64UrlEncode(Encoding.UTF8.GetBytes(code));
        var callbackUrl = NavigationManager.GetUriWithQueryParameters(
            NavigationManager.ToAbsoluteUri(ClientRoutes.Accounts.ResetPassword).AbsoluteUri,
            new Dictionary<string, object?> { ["code"] = code });

        await EmailSender.SendPasswordResetLinkAsync(user, Input.Email, HtmlEncoder.Default.Encode(callbackUrl));

        RedirectManager.RedirectTo(ClientRoutes.Accounts.ForgotPasswordConfirmation);
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "لطفا {0} را وارد کنید")]
        [EmailAddress]
        public string Email { get; set; } = "";
    }
}
