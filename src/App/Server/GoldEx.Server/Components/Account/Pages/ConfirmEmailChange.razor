@attribute [Route(ClientRoutes.Accounts.ConfirmEmailChange)]

@inject UserManager<AppUser> UserManager
@inject SignInManager<AppUser> SignInManager
@inject IdentityRedirectManager RedirectManager
@layout EmptyBoxLayout

<PageTitle>تایید تغییر ایمیل</PageTitle>

<MudStack AlignItems="AlignItems.Center">
    <MudItem>
        <MudImage Src="/assets/logo/logo512.png" Alt="Logo" Height="50" />
    </MudItem>
    <MudItem>
        <MudText Align="Align.Center" Typo="Typo.h3" GutterBottom="true">گلدکس</MudText>
    </MudItem>
    <MudItem>
        <MudText Align="Align.Center" Typo="Typo.h5" GutterBottom="true">تایید تغییر ایمیل</MudText>
    </MudItem>
    <MudItem>
        <StatusMessage Message="@_message" />
    </MudItem>
    <MudItem>
        <MudButton Variant="Variant.Filled" StartIcon="@Icons.Material.Filled.Login" Color="Color.Primary" Href="@ClientRoutes.Accounts.Login">ورود به سامانه</MudButton>
    </MudItem>
</MudStack>

@code {
    private string? _message;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromQuery]
    private string? UserId { get; set; }

    [SupplyParameterFromQuery]
    private string? Email { get; set; }

    [SupplyParameterFromQuery]
    private string? Code { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (UserId is null || Email is null || Code is null)
        {
            RedirectManager.RedirectToWithStatus(
                ClientRoutes.Accounts.Login, "خطا: لینک تأیید تغییر ایمیل معتبر نیست", HttpContext);
        }

        var user = await UserManager.FindByIdAsync(UserId);
        if (user is null)
        {
            _message = "کاربری با آیدی '{userId}' پیدا نشد";
            return;
        }

        var code = Encoding.UTF8.GetString(WebEncoders.Base64UrlDecode(Code));
        var result = await UserManager.ChangeEmailAsync(user, Email, code);
        if (!result.Succeeded)
        {
            _message = "خطا در تغییر ایمیل";
            return;
        }

        // In our UI email and username are one and the same, so when we update the email
        // we need to update the username.
        var setUserNameResult = await UserManager.SetUserNameAsync(user, Email);
        if (!setUserNameResult.Succeeded)
        {
            _message = "خطا در تغییر نام کاربری";
            return;
        }

        await SignInManager.RefreshSignInAsync(user);
        _message = "ایمیل شما با موفقیت تغییر یافت!";
    }
}
