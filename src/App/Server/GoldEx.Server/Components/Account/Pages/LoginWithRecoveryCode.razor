@attribute [Route(ClientRoutes.Accounts.LoginWithRecoveryCode)]

@inject SignInManager<AppUser> SignInManager
@inject UserManager<AppUser> UserManager
@inject IdentityRedirectManager RedirectManager
@inject ILogger<LoginWithRecoveryCode> Logger
@layout EmptyBoxLayout

<PageTitle>ورود با کد بازیابی</PageTitle>

<MudStack AlignItems="AlignItems.Center">
    <MudItem>
        <MudImage Src="/assets/logo/logo512.png" Alt="Logo" Height="50" />
    </MudItem>
    <MudItem>
        <MudText Align="Align.Center" Typo="Typo.h3">ورود به گلدکس</MudText>
    </MudItem>
    <MudItem>
        <MudText Align="Align.Center" Typo="Typo.h6" GutterBottom="true">ورود با کد بازیابی</MudText>
    </MudItem>
</MudStack>
<EditForm Model="Input" FormName="login-with-recovery-code" OnValidSubmit="OnValidSubmitAsync" method="post">
    <DataAnnotationsValidator />

    <MudGrid>
        <MudItem xs="12">
            <MudStaticTextField For="@(() => Input.RecoveryCode)" @bind-Value="Input.RecoveryCode"
                                Label="کد بازیابی" Class="my-2"
                                UserAttributes="@(new Dictionary<string, object?> { { "aria-required", "true" } } )" />
        </MudItem>
    </MudGrid>

    <StatusMessage Message="@_message" Severity="Severity.Error" />

    <MudItem xs="12" Class="mt-2">
        <MudStaticButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" FormAction="FormAction.Submit">ورود</MudStaticButton>
    </MudItem>
</EditForm>
<MudDivider />
<MudGrid Class="mt-1">
    <MudItem xs="12">
        <MudAlert Severity="Severity.Info">
            توجه: کدهای بازیابی یکبار مصرف بوده و پس از یک بار ورود موفقت آمیز، قابل مصرف نمی باشد.
        </MudAlert>
    </MudItem>
</MudGrid>

@code {
    private string? _message;
    private AppUser _user = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        // Ensure the user has gone through the username & password screen first
        _user = await SignInManager.GetTwoFactorAuthenticationUserAsync() ??
            throw new InvalidOperationException("Unable to load two-factor authentication user.");
    }

    private async Task OnValidSubmitAsync()
    {
        var recoveryCode = Input.RecoveryCode.Replace(" ", string.Empty);

        var result = await SignInManager.TwoFactorRecoveryCodeSignInAsync(recoveryCode);

        var userId = await UserManager.GetUserIdAsync(_user);

        if (result.Succeeded)
        {
            Logger.LogInformation("User with ID '{UserId}' logged in with a recovery code.", userId);
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("حساب شما مسدود شده است");
            RedirectManager.RedirectTo(ClientRoutes.Accounts.Lockout);
        }
        else
        {
            Logger.LogWarning("Invalid recovery code entered for user with ID '{UserId}' ", userId);
            _message = "خطا: کد بازیابی اشتباه است";
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "لطفا {0} را وارد کنید")]
        [DataType(DataType.Text)]
        [Display(Name = "کد بازیابی")]
        public string RecoveryCode { get; set; } = "";
    }
}
