@attribute [Route(ClientRoutes.Accounts.Login)]

@inject SignInManager<AppUser> SignInManager
@inject ILogger<Login> Logger
@inject IdentityRedirectManager RedirectManager
@layout EmptyBoxLayout

<PageTitle>ورود</PageTitle>

<MudStack AlignItems="AlignItems.Center">
    <MudItem>
        <MudImage Src="/assets/logo/logo512.png" Alt="Logo" Height="50" />
    </MudItem>
    <MudItem>
        <MudText Align="Align.Center" Typo="Typo.h3" GutterBottom="true">ورود به گلدکس</MudText>
    </MudItem>
</MudStack>

<EditForm Model="Input" method="post" OnValidSubmit="LoginUser" FormName="login">
    <DataAnnotationsValidator />
    <MudGrid>
        <MudItem xs="12">
            <MudStaticTextField For="@(() => Input.Email)" @bind-Value="Input.Email"
                                Label="آدرس ایمیل" Placeholder="name@example.com"
                                UserAttributes="@(new Dictionary<string, object?> { { "autocomplete", "username" }, { "aria-required", "true" } } )" />
        </MudItem>
        <MudItem xs="12">
            <MudStaticTextField For="@(() => Input.Password)" @bind-Value="Input.Password"
                                Label="رمز عبور" InputType="InputType.Password" Placeholder="رمز عبور"
                                UserAttributes="@(new Dictionary<string, object?> { { "autocomplete", "current-password" }, { "aria-required", "true" } } )" />
        </MudItem>
        <MudItem xs="12" Class="m-0 p-0">
            <MudStaticCheckBox For="@(() => Input.RememberMe)" @bind-Value="Input.RememberMe">مرا بخاطر بسپار</MudStaticCheckBox>
        </MudItem>
        @if (!string.IsNullOrEmpty(_errorMessage))
        {
            <MudItem xs="12" Class="mb-0">
                <StatusMessage Message="@_errorMessage" Severity="Severity.Error" />
            </MudItem>
        }

        <MudItem xs="12" Class="mt-0">
            <MudStaticButton Variant="Variant.Filled" Color="Color.Primary" FullWidth="true" FormAction="FormAction.Submit" StartIcon="@Icons.Material.Filled.Login">ورود به سامانه</MudStaticButton>
        </MudItem>
    </MudGrid>
</EditForm>
<MudGrid Class="mt-1">
    <MudItem xs="6">
        <MudButton StartIcon="@Icons.Material.Filled.Phone" Variant="Variant.Filled" FullWidth="true" Color="Color.Primary" Href="@ClientRoutes.Accounts.LoginWithPhoneNumber">ورود با شماره تلفن</MudButton>
    </MudItem>
    <MudItem xs="6">
        <ExternalLoginPicker ExternalLoginPickerSource="ExternalLoginSource.Login" />
    </MudItem>
</MudGrid>

<MudGrid>
    <MudItem xs="12">
        <MudLink Href="@ClientRoutes.Accounts.ForgotPassword">رمز عبور خود را فراموش کرده اید؟</MudLink><br />
    </MudItem>
</MudGrid>

@code {
    private string? _errorMessage;

    [CascadingParameter]
    private HttpContext HttpContext { get; set; } = default!;

    [SupplyParameterFromForm]
    private InputModel Input { get; set; } = new();

    [SupplyParameterFromQuery]
    private string? ReturnUrl { get; set; }

    protected override async Task OnInitializedAsync()
    {
        if (HttpMethods.IsGet(HttpContext.Request.Method))
        {
            // Clear the existing external cookie to ensure a clean login process
            await HttpContext.SignOutAsync(IdentityConstants.ExternalScheme);
        }
    }

    private async Task LoginUser()
    {
        var result = await SignInManager.PasswordSignInAsync(Input.Email, Input.Password, Input.RememberMe, lockoutOnFailure: true);
        if (result.Succeeded)
        {
            Logger.LogInformation("User logged in.");
            RedirectManager.RedirectTo(ReturnUrl);
        }
        else if (result.RequiresTwoFactor)
        {
            RedirectManager.RedirectTo(
                ClientRoutes.Accounts.LoginWith2Fa,
                new Dictionary<string, object?> { ["returnUrl"] = ReturnUrl, ["rememberMe"] = Input.RememberMe });
        }
        else if (result.IsLockedOut)
        {
            Logger.LogWarning("User account locked out.");
            RedirectManager.RedirectTo(ClientRoutes.Accounts.Lockout);
        }
        else
        {
            _errorMessage = "خطا: اطلاعات ورودی معتبر نیست";
        }
    }

    private sealed class InputModel
    {
        [Required(ErrorMessage = "لطفا {0} را وارد کنید")]
        [EmailAddress]
        public string Email { get; set; } = "";

        [Required(ErrorMessage = "لطفا {0} را وارد کنید")]
        [DataType(DataType.Password)]
        public string Password { get; set; } = "";

        [Display(Name = "مرا بخاطر بسپار")]
        public bool RememberMe { get; set; }
    }
}
